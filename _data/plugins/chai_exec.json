{"_id":"chai-exec","_rev":"4-b9a5bed8deb8901ee06e67a16416405e","name":"chai-exec","dist-tags":{"latest":"1.1.1"},"versions":{"0.0.1":{"name":"chai-exec","version":"0.0.1","description":"Chai assertions for testing your CLI","keywords":["chai","chai-plugin","cli","spawn","exec"],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"license":"MIT","homepage":"https://jsdevtools.org/chai-exec","repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"lint":"eslint lib test","test":"npm run test:javascript && npm run test:typescript && npm run lint","test:javascript":"mocha","test:typescript":"tsc --noEmit test/specs/typescript-definition.spec.ts","coverage":"nyc --reporter=text --reporter=lcov mocha","upgrade":"npm-check -u","bump":"bump --prompt --tag --push --all","release":"npm run upgrade && npm test && npm run bump"},"devDependencies":{"@types/chai":"^4.1.7","@types/node":"^10.12.18","chai":"^4.2.0","coveralls":"^3.0.2","eslint":"^5.10.0","eslint-config-modular":"^5.0.1","mocha":"^5.2.0","npm-check":"^5.9.0","nyc":"^13.1.0","typescript":"^3.2.2","version-bump-prompt":"^4.2.2"},"dependencies":{"ez-spawn":"^2.0.0"},"engines":{"node":">=6"},"gitHead":"f39fe6ad5a74e85b93e8b90ddc90ffffaab5813c","bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"_id":"chai-exec@0.0.1","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"jamesmessinger","email":"james.messinger@gmail.com"},"dist":{"integrity":"sha512-6L2ZoGUCGFAUk/Bglkmir4ukebouN2MNxtk515RPkJtLJ/lD1AFBEjgrnCQYJOhbOY+q2TTYsyUZsmRC27Kpaw==","shasum":"e2fdab6f87b2d363ed119764f5865492e640fa41","tarball":"https://registry.npmjs.org/chai-exec/-/chai-exec-0.0.1.tgz","fileCount":7,"unpackedSize":23187,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHj6zCRA9TVsSAnZWagAAXKUP/RFCRDdkENaRy7XnaAQu\nA0P2PkAfZcYrZgTW5MAeU7QbNk3xJtT8pHO0MrnKQubAQ+7Izp1ylc9s1MGe\neQdcIyGSNY9U2OBB40vHynFrm/yz+XK+kqT4VZ145WJEMlreWCnyaTFguTFw\ncv4y6hPiG34CDQtAiXIs+9nSOA/+IoWh/B534TuNX4O0wgXGkUtypDEp1lSm\nZER50P7Saorry9Q80Ba+Yavw08DhOmKUTNM3q528z6/5Dq068BLivG05kiXt\nBAZ5Hs3G+h/YlKQwPtQDr27kl0KQlLZkeH0I2NnL5MirKkr7iG3btggIsOTD\neFxBsLdwdjLt/Wjx4uzh1XCPg+f+bhsg3ufC0xJwRLV5yWxGnemGH1FfMS7O\nPgryftByPsD5ULg0JaeapijidC78ar0E+iA6yHmnw4kOugwFqBmsDKmBuljM\nWVtY1u8+o6NtyCMjVQrKEAiIPYmuaGdgxaoUqizlEQaCbe7mIOC8Zk6Dl/aG\nHSz4CreITACsFu8ighqPws2ykZBGZewbUqR4De4EPuUY/xXUSCUBXX1KyPua\nnclIgRj+S0Q25i3VcibwrGRVbTZ0aheoLub1QCG1ND/CdO3mHIZkk+6PtJIV\nA1TDk3LyKAXZ+X96QLIJZn4jdFbqaRdBTC4XitiseElWYYPgln8oFAzelRgb\n1sKM\r\n=CfdC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-exec_0.0.1_1545486002142_0.5622115214777732"},"_hasShrinkwrap":false},"0.0.2":{"name":"chai-exec","version":"0.0.2","description":"Chai assertions for testing your CLI","keywords":["chai","chai-plugin","cli","spawn","exec"],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"license":"MIT","homepage":"https://jsdevtools.org/chai-exec","repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"lint":"eslint lib test","test":"npm run test:javascript && npm run test:typescript && npm run lint","test:javascript":"mocha","test:typescript":"tsc --noEmit test/specs/typescript-definition.spec.ts","coverage":"nyc --reporter=text --reporter=lcov mocha","upgrade":"npm-check -u","bump":"bump --prompt --tag --push --all","release":"npm run upgrade && npm test && npm run bump"},"devDependencies":{"@types/chai":"^4.1.7","@types/node":"^10.12.18","chai":"^4.2.0","coveralls":"^3.0.2","eslint":"^5.10.0","eslint-config-modular":"^5.0.1","mocha":"^5.2.0","npm-check":"^5.9.0","nyc":"^13.1.0","typescript":"^3.2.2","version-bump-prompt":"^4.2.2"},"dependencies":{"ez-spawn":"^2.1.0"},"engines":{"node":">=6"},"gitHead":"cd5d0f2bee80dbfc1a3a645f6fafffaa61d84e19","bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"_id":"chai-exec@0.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"jamesmessinger","email":"james.messinger@gmail.com"},"dist":{"integrity":"sha512-qVRUP2nCQiAgJtRxlg/BPUViJsYkQUfrUKBUk1Pv733W7+1XX0E6uZ26riBlYNaUEVtf7Yzb7H+rKjUI1gHeSg==","shasum":"8715b64c1490dbac28c154b4a55b95d8feeef179","tarball":"https://registry.npmjs.org/chai-exec/-/chai-exec-0.0.2.tgz","fileCount":7,"unpackedSize":23186,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHkOMCRA9TVsSAnZWagAAGKUP/0H3QaA7k3wdLeaf1Ebi\nysvR6kWQ4ihu9tdreWoZuBP67oUTfhmRb3NKhnWLRqIv63KuHII/5IvSsziC\nep9EYUqb8TZjv4EJvnxpLLABAAsSFU019AX+aoyY0mYnsqyaMa0S1b5PJYOZ\nOKC8LJvdtGD6T8OgKoM2dOZR0H0uG2IVtR6iYrjb5TWo+VXDWBPfwK7L5yPC\nW5etrj6WzEWl/o7vMsWIBduMTJr90NVKECRyGtSY7X8Qwd1AHT0hi4YDw9ML\nRc/xjc11kQ6qWcDyXkS9Lq8qdnBzMWXAazut9SzC27e3H8zV4vdUUuVyo3Q6\nl149AVfrN1uWK8eA50HZNgRHc6hZysnauzf5MHhJqJ18QroT4k/RkbcxLkuH\n+sfVLMvc/5M3hbmyb+F754iunWAW/iPtwbsc5aadLb6QhglTlBrbethLZEnR\nPV8az88YzEgJYaw3vR6LF6WJTYrtG9AlMYn0DrU0gelQt4b0WE4vNHDVQjt9\nvG3kxHK4VJF5Tx88kB+P29iqcAlEtUnDU4mwpPsL/E1BkeprpGfb7FJwRBZg\nJMj9JndqYK5dxoDPgUFI9V0A6mjK04RxqxSfMdDmLm5Eq8hjjOttpLICVkWS\nE8I+hLgOliWnM7lzKVUyGnLkqEhqXCMwOI9epOnytr55SEO2dLKYXA5ZLsox\nPD95\r\n=/njT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-exec_0.0.2_1545487244026_0.034350310898169534"},"_hasShrinkwrap":false},"1.0.0":{"name":"chai-exec","version":"1.0.0","description":"Chai assertions for testing your CLI","keywords":["chai","chai-plugin","cli","spawn","exec"],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"license":"MIT","homepage":"https://jsdevtools.org/chai-exec","repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"lint":"eslint lib test","test":"npm run test:javascript && npm run test:typescript && npm run lint","test:javascript":"mocha","test:typescript":"tsc --noEmit test/specs/typescript-definition.spec.ts","coverage":"nyc --reporter=text --reporter=lcov mocha","upgrade":"npm-check -u","bump":"bump --prompt --tag --push --all","release":"npm run upgrade && npm test && npm run bump"},"devDependencies":{"@types/chai":"^4.1.7","@types/node":"^10.12.18","chai":"^4.2.0","coveralls":"^3.0.2","eslint":"^5.11.0","eslint-config-modular":"^5.0.1","mocha":"^5.2.0","npm-check":"^5.9.0","nyc":"^13.1.0","typescript":"^3.2.2","version-bump-prompt":"^4.2.2"},"dependencies":{"ez-spawn":"^2.1.0"},"engines":{"node":">=6"},"gitHead":"d52809e777cd4d072d395dad3457cf6400f5f8e1","bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"_id":"chai-exec@1.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"jamesmessinger","email":"james.messinger@gmail.com"},"dist":{"integrity":"sha512-KaEHVSauC62576pE5r2T4dJ1uaU4RHMwnRJmbO4/sBpNeHsst/Xz6ZSGIzy4ivnO9gDUeofjqCbbMorCnZPlVQ==","shasum":"706b62f173361efb33a7f6a70b4efb0015c53b9c","tarball":"https://registry.npmjs.org/chai-exec/-/chai-exec-1.0.0.tgz","fileCount":8,"unpackedSize":33692,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcH616CRA9TVsSAnZWagAAXPAQAIfAuuyrp2ZLmDNhQSUR\nDDWMHj61+XxiBacXsSzoHEXLp9tJyCuWMQAK0+UZzbAlTWEUjQHxBp0ZJuxT\n+T7RCmb3xEFz8VeDMcyxapFSEcYhTobk5uM/S6mBQ2w/7O9Oxwik3zflG3v3\ntVLCDtk6AQ5N/0F2ie3QroYWc6yJc2d5FVVdjg5icLEgvb6HFHfIriSD9qwW\n8YSc0YVShf5L5N9ws0NEBkGvE4Vn8+e3yG6ATd8HxCGCBOVZcgmI5nFv+ps5\n+DX4zMu7kTs1A+2hKWiEvhTht3hars4nPVqzy5bspym1XVpClaOXIpuPJA3n\nSL2nRp34MnkxFYiJfBN8svZBFNtaVLdZXL1xK/5uYaUebm2frPfP1rtQEg1p\nPYKX5vxzc9aMu120R/nErL+iYZDqhNy715Q2IvCqz29SFZvY4NR8umWMH2p9\nf+KKo5gR0pFwCH2hS70SNq5Rb2kcInfxfe9AXs2ESeFbtIUJyCTZJVRDFbui\nyM9YnPlmhgT7R+FGCIw0kvsdIAbmqmEu6MwPEYXTYe1HhWzruX91qMZ8MvS2\n3BoXlG8x674gEhChVkcZdGWTglJSTBVgipqg9ppFpqAMIyfXemEE/7R2r+s/\nxh9aSic5byIb0L1z6ALhIcHu8k+FtlcpXDCaK+uXwtVfDQUhRl0IyZ9bfqGI\nuXZP\r\n=xAJC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-exec_1.0.0_1545579897503_0.23997882844874896"},"_hasShrinkwrap":false},"1.1.0":{"name":"chai-exec","version":"1.1.0","description":"Chai assertions for testing your CLI","keywords":["chai","chai-plugin","cli","spawn","exec"],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"license":"MIT","homepage":"https://jsdevtools.org/chai-exec","repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"lint":"eslint lib test","test":"npm run test:javascript && npm run test:typescript && npm run lint","test:javascript":"mocha","test:typescript":"tsc --noEmit test/specs/typescript-definition.spec.ts","coverage":"nyc --reporter=text --reporter=lcov mocha","upgrade":"npm-check -u","bump":"bump --prompt --tag --push --all","release":"npm run upgrade && npm test && npm run bump"},"devDependencies":{"@types/chai":"^4.1.7","@types/node":"^10.12.18","chai":"^4.2.0","coveralls":"^3.0.2","eslint":"^5.11.0","eslint-config-modular":"^5.0.1","mocha":"^5.2.0","npm-check":"^5.9.0","nyc":"^13.1.0","typescript":"^3.2.2","version-bump-prompt":"^4.2.2"},"dependencies":{"ez-spawn":"^2.1.1"},"engines":{"node":">=6"},"gitHead":"8973bc4d23c709f38feb12740454720d5d7c3b1d","bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"_id":"chai-exec@1.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"jamesmessinger","email":"james.messinger@gmail.com"},"dist":{"integrity":"sha512-QmTDtSEuvSKPb8AdeQho4XWZVgJvS4MgJOwjaDVcQFp3jkXr72kQXpLlMKYx9gruSyn95+Yhh6cIdDgT68MUMQ==","shasum":"8e75365948db84f4af5771a0a60d8eb28ab4693c","tarball":"https://registry.npmjs.org/chai-exec/-/chai-exec-1.1.0.tgz","fileCount":10,"unpackedSize":38412,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIAAjCRA9TVsSAnZWagAAC/8P/04eVNLscKt8/dPn7vnj\nKYNW+pfMlB+rBqSC7sN4WFaaj3i9ksWryD3XvwOcIuWv2zeSo1Zl/lgayu1k\nkO9Gz13fy9mjG/K7UaTAKxNzHhPUCMHTdUoMgZOKR+bD0rAxCnbXQtbUhj/1\n8wMILuOWqxsn36vSfWJyIy+lKydCxXy4dpCyep5dr3mLAH8lenOhInztH66m\nhMA/eLP/n6LAnIgqBDMnLKWwpYhRZxSi/va1HpdVZGWB/NHolthTKJEUKKoW\noN8zNYibw87Qvm/rkefgYf4KxVgTlQye2KjWdWPG6NQqe5V571w1R/GPXLoa\nGH/Epim8STO1CP8B0gDq4F9Ma+VwT4ze3nGu2AX1htfMs4ooc3p22vmkKZNj\nmOXe5faDiLyR4wwhwWke5ADYUK9wxR7wJjpodOr2j5StvlnWeQeIibkHqlmM\nwW1dwshUrtLhNFv4jwI9YwK5dOBfR7UbFINBNY2DLU2sQyvEKJ2qwjgBpfaU\nPmcHkjb8KnxF+vhFGQBYMtSAm2PZSCeI8cUb/Dk+TRMheu7nEjkmZ+iL/EpO\nHJsg25zOLx1QGpKfj/gvX5yMF6Z1SwNZeU6JqGgWndOjG6pC9UGkvFShNcc1\nrx3odkEFO6fmLoJN3p2ypQsLe2AXIq2WvXdI5wWuH/1bIeV0ZYx5vIdlR/W4\nw+4Y\r\n=Ljc5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-exec_1.1.0_1545601059171_0.5006447068557158"},"_hasShrinkwrap":false},"1.1.1":{"name":"chai-exec","version":"1.1.1","description":"Chai assertions for testing your CLI","keywords":["chai","chai-plugin","cli","spawn","exec"],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"license":"MIT","homepage":"https://jsdevtools.org/chai-exec","repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"lint":"eslint lib test","test":"npm run test:javascript && npm run test:typescript && npm run lint","test:javascript":"mocha","test:typescript":"tsc --noEmit test/specs/typescript-definition.spec.ts","coverage":"nyc --reporter=text --reporter=lcov mocha","upgrade":"npm-check -u","bump":"bump --prompt --tag --push --all","release":"npm run upgrade && npm test && npm run bump"},"devDependencies":{"@types/chai":"^4.1.7","@types/node":"^10.12.18","chai":"^4.2.0","coveralls":"^3.0.2","eslint":"^5.11.0","eslint-config-modular":"^5.0.1","mocha":"^5.2.0","npm-check":"^5.9.0","nyc":"^13.1.0","typescript":"^3.2.2","version-bump-prompt":"^4.2.2"},"dependencies":{"ez-spawn":"^2.1.1"},"engines":{"node":">=6"},"gitHead":"f0032644803a9fa3dac8ae8550e9782de29a921e","bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"_id":"chai-exec@1.1.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"jamesmessinger","email":"james.messinger@gmail.com"},"dist":{"integrity":"sha512-Sl0zTpxGKhvjEE/Ehr46N4UYZxAwOTtS3tZiszEbvf82GL5NpA5XhkgKQjh+wEjTAUD7F7NjJPUnYaiOa8TC6Q==","shasum":"b24a6a9bf01baf17822f87ce24ec99fb838f09df","tarball":"https://registry.npmjs.org/chai-exec/-/chai-exec-1.1.1.tgz","fileCount":11,"unpackedSize":38883,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIOikCRA9TVsSAnZWagAA98QP/AxUYr03ICR+i7cVQ+a4\n8z0lhlnwAuTKTGcnY+Gy1FP/iJNaJa0tbMApTh8pplaGU1hpEEq3tJTs/7Tg\nNOrhI6imNRFnKXrBBvwtdJQ+YvR9cn8t/DJ0p90jtEDi9UWH2dStUM17Tydl\nMzGZ7Iay9521giKhBmlYCwTL4SVRSENN0yffoDxqvBkHLbhLk66Uqp0//pvc\nNCiMSOdKROGRNcwx8boyGV0hKh+e3Lca7J9JynDun+vp7tIOm6U6Yvq2Pp/2\n86ZFmx0nFLXLg4SWZZJmD0wh2QNar5p2uS4l8afVgD9CqOXuV7A7TgAfk+pK\nP795evU3kuLZOxe0oR4T1xq+AAGA7bDxPRWrO0oSjP6pPWpPhld5R5NXfRAQ\nzPV5NRiF7D2vSryxU8NGGqUVNyEDZ+bjZZGBDuMmp/R6SoK/aGCakHLocRuu\nEk+99RjDAdQyLPRqy8WTGiqRK73HHfdkgSEIgmlgR12h2HX4V5PqUA1Cq456\nLVFasHiRuwr9JZIz+oGVA2q+0BcfKXwRDRYWF3x6Q78WQuInOBno2luAaJ7L\n7PGPbE1JACcHi3NctWpEpk1C8sGETHWv8AXb/lkhPfVlKPYgk93UzYrfCOfa\nxkDXIh1WNh5/P5X9qFinlyvqkAgZ2MH2R2+L73EYJWBDT+yK9f9Qa28wCYX+\nRGfX\r\n=lAgI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-exec_1.1.1_1545660579425_0.5337464167845467"},"_hasShrinkwrap":false}},"time":{"created":"2018-12-22T13:40:02.142Z","0.0.1":"2018-12-22T13:40:02.387Z","modified":"2018-12-24T14:09:42.427Z","0.0.2":"2018-12-22T14:00:44.177Z","1.0.0":"2018-12-23T15:44:57.609Z","1.1.0":"2018-12-23T21:37:39.437Z","1.1.1":"2018-12-24T14:09:39.855Z"},"maintainers":[{"name":"jamesmessinger","email":"james.messinger@gmail.com"}],"description":"Chai assertions for testing your CLI","homepage":"https://jsdevtools.org/chai-exec","keywords":["chai","chai-plugin","cli","spawn","exec"],"repository":{"type":"git","url":"git+https://github.com/JS-DevTools/chai-exec.git"},"contributors":[{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},{"name":"James Messinger","url":"https://jamesmessinger.com"}],"author":{"name":"Randall Krauskopf","url":"http://github.com/rkrauskopf"},"bugs":{"url":"https://github.com/JS-DevTools/chai-exec/issues"},"license":"MIT","readme":"Chai Exec\n=======================\n\n#### Chai assertions for testing your CLI\n\n[![Cross-Platform Compatibility](https://jsdevtools.org/img/badges/os-badges.svg)](https://travis-ci.com/JS-DevTools/chai-exec)\n[![Build Status](https://api.travis-ci.com/JS-DevTools/chai-exec.svg?branch=master)](https://travis-ci.com/JS-DevTools/chai-exec)\n\n[![Coverage Status](https://coveralls.io/repos/github/JS-DevTools/chai-exec/badge.svg?branch=master)](https://coveralls.io/github/JS-DevTools/chai-exec?branch=master)\n[![Dependencies](https://david-dm.org/JS-DevTools/chai-exec.svg)](https://david-dm.org/JS-DevTools/chai-exec)\n\n[![npm](https://img.shields.io/npm/v/chai-exec.svg?maxAge=43200)](https://www.npmjs.com/package/chai-exec)\n[![License](https://img.shields.io/npm/l/chai-exec.svg?maxAge=2592000)](LICENSE)\n\n\nFeatures\n--------------------------\n- **Easy to use**<br>\n  Pass your CLI and arguments as a single string, an array of strings, or as separate parameters.\n\n- **Don't repeat yourself**<br>\n  Set your common [defaults](#chaiexecdefaults) _once_.  Each test ony needs to specify the arguments that are unique to it.\n\n- **Fluent assertions**<br>\n  Test your CLI using intuitive fluent syntax, such as `myCLI.should.exit.with.code(0)` or `myCLI.stdout.should.contain(\"some string\")`.\n\n- **Async Support**<br>\n  Just use `await chaiExecAsync()` instead of `chaiExec()`.  Everything else is the same.\n\n- **Windows Support**<br>\n  Excellent Windows support, thanks to [cross-spawn](https://github.com/moxystudio/node-cross-spawn).\n\n\nRelated Projects\n--------------------------\n- [ez-spawn](https://github.com/JS-DevTools/ez-spawn) - Simple, consistent process spawning\n\n\nExamples\n--------------------------\n\n```javascript\nconst chaiExec = require(\"chai-exec\");\nconst chai = require(\"chai\");\n\nchai.use(chaiExec);\n\ndescribe(\"My CLI\", () => {\n  it(\"should exit with a zero exit code\", () => {\n    // Run your CLI\n    let myCLI = chaiExec('my-cli --arg1 --arg2 \"some other arg\"');\n\n    // Should syntax\n    myCLI.should.exit.with.code(0);\n    myCLI.stdout.should.contain(\"Success!\");\n    myCLI.stderr.should.be.empty;\n\n    // Expect sytnax\n    expect(myCLI).to.exit.with.code(0);\n    expect(myCLI).stdout.to.contain(\"Success!\");\n    expect(myCLI).stderr.to.be.empty;\n\n    // Assert syntax\n    assert.exitCode(myCLI, 0);\n    assert.stdout(myCLI, \"Success!\");\n    assert.stderr(myCLI, \"\");\n  });\n});\n```\n\n\nInstallation\n--------------------------\nInstall using [npm](https://docs.npmjs.com/getting-started/what-is-npm):\n\n```bash\nnpm install chai-exec\n```\n\nThen require it in your test file and register it with Chai:\n\n```javascript\nconst chaiExec = require(\"chai-exec\");\nconst chai = require(\"chai\");\n\nchai.use(chaiExec);\n```\n\n\nUsage\n--------------------------\n\n### `chaiExec(cli, [args], [options])`\n\nYou can pass your CLI and its arguments as a single string, an array of strings, or as separate parameters.  The following examples all do the same thing:\n\n```javascript\nchaiExec(`git commit -am \"Fixed a bug\"`);           // Pass the CLI and args as a single string\nchaiExec(\"git\", \"commit\", \"-am\", \"Fixed a bug\");    // Pass the CLI and args as separate params\nchaiExec([\"git\", \"commit\", \"-am\", \"Fixed a bug\"]);  // Pass the CLI and args as an array\nchaiExec(\"git\", [\"commit\", \"-am\", \"Fixed a bug\"]);  // Pass the CLI as a string and args as an array\n```\n\nSee [ez-spawn options](https://github.com/JS-DevTools/ez-spawn#options-object) for details about the `options` parameter.\n\n### `chaiExecAsync(cli, [args], [options])`\n\nThe `chaiExecAsync()` function works exactly the same as `chaiExec()`, except that it runs your CLI asynchronously and returns a `Promise` that resolves when the CLI exits.  You'll need to explicitly require the `chaiExecAsync` export, like this:\n\n```javascript\nconst { chaiExecAsync } = require(\"chai-exec\");\n```\n\nYou can then use `chaiExecAsync` exactly the same as `chaiExec`, but remember to use the `async` and `await` keywords, since it's asynchronous.\n\n```javascript\nconst { chaiExecAsync } = require(\"chai-exec\");\nconst chai = require(\"chai\");\n\nchai.use(chaiExecAsync);\n\ndescribe(\"My CLI\", () => {\n  it(\"should exit with a zero exit code\", async () => {\n    // Run your CLI\n    let myCLI = await chaiExecAsync('my-cli --arg1 --arg2 \"some other arg\"');\n\n    // Should syntax\n    myCLI.should.exit.with.code(0);\n    myCLI.stdout.should.contain(\"Success!\");\n    myCLI.stderr.should.be.empty;\n\n    // Expect sytnax\n    expect(myCLI).to.exit.with.code(0);\n    expect(myCLI).stdout.to.contain(\"Success!\");\n    expect(myCLI).stderr.to.be.empty;\n\n    // Assert syntax\n    assert.exitCode(myCLI, 0);\n    assert.stdout(myCLI, \"Success!\");\n    assert.stderr(myCLI, \"\");\n  });\n});\n```\n\n### `chaiExec.defaults`\n\nWhen writing tests for a CLI, you'll often want to use the same command, args, and/or options for every test.  Rather than repeating the same parameters every time you call `chaiExec`, you can just set `chaiExec.defaults` once.  Your default values will be used for every subsequent `chaiExec()` call.  You can specify additional CLI arguments and/or options for each call, in addition to the defaults.\n\n- `defaults.command` (string)<br>\n  The name or path of your CLI.  Set this once, and then you only ever need to pass arguments to `chaiExec()`\n\n- `defaults.args` (string or array of strings)<br>\n  Arguments to pass to your CLI every time.  If you pass additional arguments when you call `chaiExec()`, they will be appended to the default arguments.\n\n- `defaults.options` ([options object](https://github.com/JS-DevTools/ez-spawn#options-object))<br>\n  Default options to use every time.  If you pass additional options when you call `chaiExec()`, they will be merged with the default arguments.\n\n```javascript\nconst chaiExec = require(\"chai-exec\");\nconst chai = require(\"chai\");\n\nchai.use(chaiExec);\n\n// Set some defaults\nchaiExec.defaults = {\n  command: \"my-cli\",\n  args: \"--arg1 --arg2\",\n  options: {\n    cwd: \"/usr/bin\"\n  }\n};\n\ndescribe(\"My CLI\", () => {\n  it(\"should use defaults\", () => {\n    // Run your CLI using defaults + one-time args\n    let myCLI(\"--arg3 --arg4\");\n\n    myCLI.command.should.equal(\"my-cli\");\n    myCLI.args.should.deep.equal([ \"--arg1\", \"--arg2\", \"--arg3\", \"--arg4\" ]);\n  });\n});\n```\n\n\nAssertions\n--------------------------\n\n### `.exitCode(number, [message])`\n\n**aliases:** `.exit.code` or `.status`\n\nAsserts on your CLI's exit code.  You can test for a specific code, a list of codes, or a range.\n\n```javascript\n// Should syntax\nmyCLI.exitCode.should.equal(0);\nmyCLI.should.have.exitCode(0);\nmyCLI.should.exit.with.code(0);\nmyCLI.should.exit.with.a.code.that.is.oneOf(0, [0, 1, 2, 3]);\nmyCLI.should.have.an.exit.code.of.at.least(0).and.at.most(5);\n\n// Expect sytnax\nexpect(myCLI).exitCode.to.equal(0);\nexpect(myCLI).to.have.exitCode(0);\nexpect(myCLI).to.exit.with.code(0);\nexpect(myCLI).to.exit.with.a.code.that.is.oneOf([0, 1, 2, 3]);\nexpect(myCLI).to.have.an.exit.code.of.at.least(0).and.at.most(5);\n\n// Assert syntax\nassert.equal(myCLI.exitCode, 0);\n\nassert.exitCode(myCLI, 0);\nassert.exitCode(myCLI, [0, 1, 2, 3]);\n\nassert.notExitCode(myCLI, 1);\nassert.notExitCode(myCLI, [1, 2, 3]);\n\nassert.exitCodeBetween(myCLI, 0, 5);\nassert.exitCodeNotBetween(myCLI, 1, 5);\n```\n\n### `.stdout(string, [message])`\n\nAsserts on your CLI's standard output (non-error, non-warning output).  You can test for a specific string, a substring, or a regular expression.\n\n```javascript\n// Should syntax\nmyCLI.stdout.should.equal(\"Success!\");\nmyCLI.should.have.stdout.that.contains(\"Success!\");\nmyCLI.should.have.stdout.that.does.not.contain(\"Failure!\");\nmyCLI.should.have.stdout.that.matches(/^Success!$/);\nmyCLI.should.have.stdout.that.does.not.match(/^Failure!$/);\n\n// Expect syntax\nexpect(myCLI).stdout.to.equal(\"Success!\");\nexpect(myCLI).to.have.stdout.that.contains(\"Success!\");\nexpect(myCLI).to.have.stdout.that.does.not.contain(\"Failure!\");\nexpect(myCLI).to.have.stdout.that.matches(/^Success!$/);\nexpect(myCLI).to.have.stdout.that.does.not.match(/^Failure!$/);\n\n// Assert syntax\nassert.stdout(myCLI, \"Success!\");\nassert.stdout(myCLI, /^Success!$/);\n\nassert.include(myCLI.stdout, \"Success!\");\nassert.notInclude(myCLI.stdout, \"Failure!\");\n\nassert.match(myCLI.stdout, /^Success!$/);\nassert.notMatch(myCLI.stdout, /^Failure!$/);\n```\n\n### `.stderr(string, [message])`\n\nAsserts on your CLI's stderr output (errors and warnings).  You can test for a specific string, a substring, or a regular expression.\n\n```javascript\n// Should syntax\nmyCLI.stderr.should.equal(\"Failure!\");\nmyCLI.should.have.stderr.that.contains(\"Failure!\");\nmyCLI.should.have.stderr.that.does.not.contain(\"Success!\");\nmyCLI.should.have.stderr.that.matches(/^Failure!$/);\nmyCLI.should.have.stderr.that.does.not.match(/^Success!$/);\n\n// Expect syntax\nexpect(myCLI).stderr.to.equal(\"Failure!\");\nexpect(myCLI).to.have.stderr.that.contains(\"Failure!\");\nexpect(myCLI).to.have.stderr.that.does.not.contain(\"Success!\");\nexpect(myCLI).to.have.stderr.that.matches(/^Failure!$/);\nexpect(myCLI).to.have.stderr.that.does.not.match(/^Success!$/);\n\n// Assert syntax\nassert.stderr(myCLI, \"Failure!\");\nassert.stderr(myCLI, /^Failure!$/);\n\nassert.include(myCLI.stderr, \"Failure!\");\nassert.notInclude(myCLI.stderr, \"Success!\");\n\nassert.match(myCLI.stderr, /^Failure!$/);\nassert.notMatch(myCLI.stderr, /^Success!$/);\n```\n\n### `.output(string, [message])`\n\nAsserts on **all** of your CLI's output (stdout + output).  You can test for a specific string, a substring, or a regular expression.\n\n```javascript\n// Should syntax\nmyCLI.output.should.equal(\"Success!\");\nmyCLI.should.have.output.that.contains(\"Failure!\");\nmyCLI.should.have.output.that.does.not.contain(\"Success!\");\nmyCLI.should.have.output.that.matches(/^(Success|Failure)!$/);\nmyCLI.should.have.output.that.does.not.match(/^(Success|Failure)!$/);\n\n// Expect syntax\nexpect(myCLI).output.to.equal(\"Success!\");\nexpect(myCLI).to.have.output.that.contains(\"Failure!\");\nexpect(myCLI).to.have.output.that.does.not.contain(\"Success!\");\nexpect(myCLI).to.have.output.that.matches(/^(Success|Failure)!$/);\nexpect(myCLI).to.have.output.that.does.not.match(/^(Success|Failure)!$/);\n\n// Assert syntax\nassert.output(myCLI, \"Failure!\");\nassert.output(myCLI, /^(Success|Failure)!$/);\n\nassert.include(myCLI.output, \"Failure!\");\nassert.notInclude(myCLI.output, \"Success!\");\n\nassert.match(myCLI.output, /^Failure!$/);\nassert.notMatch(myCLI.output, /^Success!$/);\n```\n\n\nContributing\n--------------------------\nContributions, enhancements, and bug-fixes are welcome! [File an issue](https://github.com/JS-DevTools/chai-exec/issues) on GitHub and [submit a pull request](https://github.com/JS-DevTools/chai-exec/pulls).\n\n#### Building/Testing\nTo build/test the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone hhttps://github.com/JS-DevTools/chai-exec.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the tests__<br>\n`npm test`\n\n\nLicense\n--------------------------\nchai-exec is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n\n\nBig Thanks To\n--------------------------\nThanks to these awesome companies for their support of Open Source developers ❤\n\n[![Travis CI](https://jsdevtools.org/img/badges/travis-ci.svg)](https://travis-ci.com)\n[![SauceLabs](https://jsdevtools.org/img/badges/sauce-labs.svg)](https://saucelabs.com)\n[![Coveralls](https://jsdevtools.org/img/badges/coveralls.svg)](https://coveralls.io)\n","readmeFilename":"README.md"}
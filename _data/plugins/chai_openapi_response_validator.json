{"_id":"chai-openapi-response-validator","name":"chai-openapi-response-validator","dist-tags":{"latest":"0.1.0"},"versions":{"0.1.0":{"name":"chai-openapi-response-validator","version":"0.1.0","description":"Simple Chai support for asserting that HTTP responses satisfy an OpenAPI spec","main":"index.js","scripts":{"test":"mocha test --recursive --exit","test:coverage":"nyc npm test && nyc report --reporter=html && nyc check-coverage --statements 95 --branches 95 --functions 95 --lines 95","test:coverage:browse":"npm run test:coverage; open coverage/index.html","test:mutation":"stryker run","test:full":"npm run lint && npm run test:coverage && npm run test:mutation","lint":"eslint .","lint:fix":"eslint --fix .","prepublish":"npm run test:full"},"repository":{"type":"git","url":"git+https://github.com/openapi-chai/chai-openapi-response-validator.git"},"author":{"name":"OpenApiChai","email":"openapichai@gmail.com"},"contributors":[{"name":"Jonny Spruce","email":"jspruce94@gmail.com"},{"name":"rwalle61"}],"license":"MIT","keywords":["chai","chai-plugin","http","response","openapi","validate"],"bugs":{"url":"https://github.com/openapi-chai/chai-openapi-response-validator/issues"},"homepage":"https://github.com/openapi-chai/chai-openapi-response-validator#readme","devDependencies":{"@stryker-mutator/core":"^2.0.0","@stryker-mutator/javascript-mutator":"^2.0.0","@stryker-mutator/mocha-framework":"^2.0.0","@stryker-mutator/mocha-runner":"^2.0.0","chai":"^4.2.0","eslint":"^5.3.0","eslint-config-airbnb":"^17.1.0","eslint-plugin-import":"^2.17.2","eslint-plugin-jsx-a11y":"^6.2.1","eslint-plugin-mocha":"^5.3.0","eslint-plugin-react":"^7.13.0","husky":"^2.3.0","mocha":"^6.1.4","nyc":"^14.1.1"},"dependencies":{"fs-extra":"^8.0.1","js-yaml":"^3.13.1","openapi-response-validator":"^3.8.1","openapi-schema-validator":"^3.0.3"},"husky":{"hooks":{"pre-commit":"npm test","pre-push":"npm run test:full"}},"gitHead":"0de7c475c8adfbbbf5144c5a9cba0c867b2d6c52","_id":"chai-openapi-response-validator@0.1.0","_nodeVersion":"12.2.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-AumJf5GeA2BBjZx1F/cbWKIpgzSWphRvvDmIwyIdpYnbpyhwYJ3BGfmqudTynWNvdimn4hX80y/g25w1Mo0Cww==","shasum":"c8d4196ec5a8cf8b5979e48cfee44e050d5c5456","tarball":"https://registry.npmjs.org/chai-openapi-response-validator/-/chai-openapi-response-validator-0.1.0.tgz","fileCount":24,"unpackedSize":34554,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+mlWCRA9TVsSAnZWagAASqAP/1x7vDayZGnn60RSCXO/\nrKdl/Z8jdh+gnmeHqqQd5B4XJaqde711uUOoarNi/XU+fWEC4w90mk/jjF6q\nDj7W51phPR+rhRsAWyAq38cYCV5yoD4hAm+bOHAMRpXWQgmZ6qfxNKySmRgR\nuiICWKjDL21F+Mn2sFEJC7+dr9G6Nk4u2kmqro06asY89vH0U78sqcodl2pW\nNjoEGy8BbKVoiimcqokxcqChmKa7P+fJEpcyS4TADUx2w/W9Hb/xFBWgoEcY\n+iWhGFCQkVHcwFks+vYnsZAFfcFdGfrgoZL+4OFsxsEy3aJosMSS1rjsCvaR\nBws7GGInHDjVgj5EXvvs6juDAt30XztboHtVT7dg65aojA+J9DrmxJDxqKgy\nbrvXuykinlqP39Cu9K8kF67k+UE2g/YAksMJW2x8zAEk4cttMwagUJ+Mhlhx\nUSJ22bJTPcCSkR1NP1gfz5F8mGVHRMYxX78C+SXwOzRPQf+ewQnVVg7XaHsl\nrFg4YxC7KM6FlmOHmDRw3gfOqZq9NqcvWA3lQgSn4bD0yKcjDe/xCXkru1Me\nO/NE4eYapoPrMld9mmkNnT0wD3ZuzYs3SNiqTkyQqAATCMMK0qY4UrgdlipO\n2FsEwlSk2oVWmD2H3ZiT9TyfAgtgWMKCKeTSBDmIB+chn9QsrQuwHfck6SS4\nXtyl\r\n=aFVD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"openapichai","email":"openapichai@gmail.com"}],"_npmUser":{"name":"openapichai","email":"openapichai@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/chai-openapi-response-validator_0.1.0_1559914837377_0.724533110040378"},"_hasShrinkwrap":false}},"time":{"created":"2019-06-07T13:40:37.377Z","0.1.0":"2019-06-07T13:40:37.558Z","modified":"2019-06-07T13:40:41.261Z"},"maintainers":[{"name":"openapichai","email":"openapichai@gmail.com"}],"description":"Simple Chai support for asserting that HTTP responses satisfy an OpenAPI spec","homepage":"https://github.com/openapi-chai/chai-openapi-response-validator#readme","keywords":["chai","chai-plugin","http","response","openapi","validate"],"repository":{"type":"git","url":"git+https://github.com/openapi-chai/chai-openapi-response-validator.git"},"contributors":[{"name":"Jonny Spruce","email":"jspruce94@gmail.com"},{"name":"rwalle61"}],"author":{"name":"OpenApiChai","email":"openapichai@gmail.com"},"bugs":{"url":"https://github.com/openapi-chai/chai-openapi-response-validator/issues"},"license":"MIT","readme":"# chai-openapi-response-validator\n\n[![Build Status](https://travis-ci.com/openapi-chai/chai-openapi-response-validator.svg?branch=master)](https://travis-ci.com/openapi-chai/chai-openapi-response-validator)\n\nSimple Chai support for asserting that HTTP responses satisfy an OpenAPI spec.\n\n## Features\n- Validates the status and body of HTTP responses against an OpenAPI spec\n- Easily load your OpenAPI spec just once in your tests\n- Flexible assertion syntax (see example below)\n- Supports OpenAPI 2 and 3\n- Supports OpenAPI specs in YAML and JSON formats\n- Informs you if your OpenAPI spec is invalid\n\n## Installation\nThis is a addon plugin for the [Chai Assertion Library](http://chaijs.com). Install via [npm](http://npmjs.org).\n```bash\n$ npm install chai-openapi-response-validator\n```\n\n## Usage\n\n### 1. Given a Test file:\n\n```javascript\n// Set up Chai\nvar chai = require('chai');\nvar expect = chai.expect;\n\n\n// Import this plugin\nvar chaiResponseValidator = require('chai-openapi-response-validator');\n// Load an OpenAPI file (YAML or JSON) into this plugin\nchai.use(chaiResponseValidator('path/to/openapi.yml'));\n\n\n// Write your test\ndescribe('GET /example/request', function() {\n  it('should satisfy OpenAPI spec', async function() {\n\n    // Get an HTTP response (e.g. via chai-http or supertest)\n    chai.use(require('chai-http'));\n    var app = require('path/to/app');\n    var res = chai.request(app).get('/example/request');\n\n    // Assert that the HTTP response satisfies the OpenAPI spec\n    expect(res).to.satisfyApiSpecForStatus(200);\n    // Alternative assertion\n    expect(res).to.have.status(200).and.satisfyApiSpec;\n  });\n});\n```\n\n### 2. Contents of `path/to/openapi.yml`:\n```yaml\nopenapi: 3.0.0\ninfo:\n  title: Example API\n  version: 1.0.0\npaths:\n  /example:\n    get:\n      responses:\n        200:\n          description: Response body should be a string\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - stringProperty\n                  - integerProperty\n                properties:\n                  stringProperty:\n                    type: string\n                  integerProperty:\n                    type: integer\n\n```\n\n### 3. Validates the response status and body against `openapi.yml`\n\n#### The assertion passes if the response status and body satisfy  `openapi.yml`:\n\n```javascript\n// Response includes:\n{\n  status: 200,\n  body: {\n    string: 'string',\n    integer: 123,\n  },\n};\n```\n\n\n#### The assertion fails if the response body is invalid:\n\n```javascript\n// Response includes:\n{\n  status: 200,\n  body: {\n    string: 'string',\n    integer: 'invalid (should be an integer)',\n  },\n};\n```\n\nOutput from test failure:\n\n```javascript\n     AssertionError: expected res to satisfy API spec:\n{\n  message: 'The response was not valid.',\n  errors: [\n    {\n      path: 'integerProperty',\n      errorCode: 'type.openapi.responseValidation',\n      message: 'integerProperty should be integer'\n    }\n  ],\n  actualResponse: {\n    status: 200,\n    body: {\n      stringProperty: 'string',\n      integerProperty: 'invalid (should be an integer)'\n    }\n  }\n}\n```\n\n\n## Contributing\n\nThank you very much for considering to contribute!\n\nPlease make sure you follow our [Code Of Conduct](https://github.com/openapi-chai/chai-openapi-response-validator/blob/master/CODE_OF_CONDUCT.md) and we also strongly recommend reading our [Contributing Guide](https://github.com/openapi-chai/chai-openapi-response-validator/blob/master/CONTRIBUTING.md).\n","readmeFilename":"README.md"}